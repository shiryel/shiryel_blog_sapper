import{S as n,i as s,s as a,e as t,f as e,t as o,v as p,g as c,k as l,l as i,h as u,j as r,m as k,o as d,n as m,r as h}from"./client.5b27cb88.js";function f(n){let s,a,f,g,v,E,w,x,b,y,P,_,T,j,M,O,N,A,H,F,L,C,R,S,Y,$,D,I,J,U,q,B,W,z,G,K,Q,V,X,Z,nn,sn,an,tn,en,on,pn,cn,ln,un,rn,kn,dn,mn,hn,fn,gn,vn,En,wn,xn,bn,yn,Pn,_n,Tn,jn,Mn,On,Nn,An,Hn,Fn,Ln,Cn,Rn,Sn,Yn,$n,Dn,In,Jn,Un,qn;return{c(){s=t("meta"),a=t("meta"),f=t("meta"),g=t("meta"),v=e(),E=t("h1"),w=o("How to add svelte on Elixir Phoenix Framework"),x=e(),b=t("h2"),y=o("Adding the Svelte and Svelte-Loader"),P=e(),_=t("p"),T=o("To do that, run this on the root dir of your phoenix project:"),j=e(),M=t("pre"),O=e(),N=t("h2"),A=o("Configuring the webpack"),H=e(),F=t("p"),L=o("Based on: "),C=t("a"),R=o("https://github.com/sveltejs/template-webpack"),S=e(),Y=t("p"),$=o("First add this on asserts/webpack.config.js:"),D=e(),I=t("pre"),J=e(),U=t("p"),q=o("Then add:"),B=e(),W=t("pre"),z=e(),G=t("p"),K=o("For the config explanations see: "),Q=t("a"),V=o("https://github.com/sveltejs/svelte-loader"),X=e(),Z=t("h2"),nn=o("Adding the function on Phoenix"),sn=e(),an=t("p"),tn=o("On your APP_web.ex in the function "),en=t("code"),on=o("view_helpers"),pn=o(" add the function:"),cn=e(),ln=t("pre"),un=e(),rn=t("p"),kn=t("code"),dn=o("Note: You can define this function in another file and import if you want a more clean solution"),mn=e(),hn=t("h2"),fn=o("Mounting the svelte component"),gn=e(),vn=t("p"),En=o("Finally we need to get the svelte file and mount on the element defined by the function above, for this we create a file "),wn=t("code"),xn=o("svelte.js"),bn=o(" on assets/js/"),yn=e(),Pn=t("pre"),_n=e(),Tn=t("h2"),jn=o("Testing"),Mn=e(),On=t("p"),Nn=o("Just create a component and add a"),An=e(),Hn=t("pre"),Fn=e(),Ln=t("p"),Cn=o("on a template :)"),Rn=e(),Sn=t("p"),Yn=o("Note 1: Yes, the YOUR_COMPONENT_FILE_NAME is the name of your file, please change it ;)"),$n=e(),Dn=t("p"),In=o("Note 2: The props will be used on your "),Jn=t("code"),Un=o("export"),qn=o(" variables on the svelte component"),this.h()},l(n){const t=p('[data-svelte="svelte-jcuvl1"]',document.head);s=c(t,"META",{name:!0,content:!0}),a=c(t,"META",{name:!0,content:!0}),f=c(t,"META",{property:!0,content:!0}),g=c(t,"META",{property:!0,content:!0}),t.forEach(l),v=i(n),E=c(n,"H1",{itemprop:!0});var e=u(E);w=r(e,"How to add svelte on Elixir Phoenix Framework"),e.forEach(l),x=i(n),b=c(n,"H2",{});var o=u(b);y=r(o,"Adding the Svelte and Svelte-Loader"),o.forEach(l),P=i(n),_=c(n,"P",{});var k=u(_);T=r(k,"To do that, run this on the root dir of your phoenix project:"),k.forEach(l),j=i(n),M=c(n,"PRE",{class:!0}),u(M).forEach(l),O=i(n),N=c(n,"H2",{});var d=u(N);A=r(d,"Configuring the webpack"),d.forEach(l),H=i(n),F=c(n,"P",{});var m=u(F);L=r(m,"Based on: "),C=c(m,"A",{href:!0,rel:!0});var h=u(C);R=r(h,"https://github.com/sveltejs/template-webpack"),h.forEach(l),m.forEach(l),S=i(n),Y=c(n,"P",{});var Bn=u(Y);$=r(Bn,"First add this on asserts/webpack.config.js:"),Bn.forEach(l),D=i(n),I=c(n,"PRE",{class:!0}),u(I).forEach(l),J=i(n),U=c(n,"P",{});var Wn=u(U);q=r(Wn,"Then add:"),Wn.forEach(l),B=i(n),W=c(n,"PRE",{class:!0}),u(W).forEach(l),z=i(n),G=c(n,"P",{});var zn=u(G);K=r(zn,"For the config explanations see: "),Q=c(zn,"A",{href:!0,rel:!0});var Gn=u(Q);V=r(Gn,"https://github.com/sveltejs/svelte-loader"),Gn.forEach(l),zn.forEach(l),X=i(n),Z=c(n,"H2",{});var Kn=u(Z);nn=r(Kn,"Adding the function on Phoenix"),Kn.forEach(l),sn=i(n),an=c(n,"P",{});var Qn=u(an);tn=r(Qn,"On your APP_web.ex in the function "),en=c(Qn,"CODE",{});var Vn=u(en);on=r(Vn,"view_helpers"),Vn.forEach(l),pn=r(Qn," add the function:"),Qn.forEach(l),cn=i(n),ln=c(n,"PRE",{class:!0}),u(ln).forEach(l),un=i(n),rn=c(n,"P",{});var Xn=u(rn);kn=c(Xn,"CODE",{});var Zn=u(kn);dn=r(Zn,"Note: You can define this function in another file and import if you want a more clean solution"),Zn.forEach(l),Xn.forEach(l),mn=i(n),hn=c(n,"H2",{});var ns=u(hn);fn=r(ns,"Mounting the svelte component"),ns.forEach(l),gn=i(n),vn=c(n,"P",{});var ss=u(vn);En=r(ss,"Finally we need to get the svelte file and mount on the element defined by the function above, for this we create a file "),wn=c(ss,"CODE",{});var as=u(wn);xn=r(as,"svelte.js"),as.forEach(l),bn=r(ss," on assets/js/"),ss.forEach(l),yn=i(n),Pn=c(n,"PRE",{class:!0}),u(Pn).forEach(l),_n=i(n),Tn=c(n,"H2",{});var ts=u(Tn);jn=r(ts,"Testing"),ts.forEach(l),Mn=i(n),On=c(n,"P",{});var es=u(On);Nn=r(es,"Just create a component and add a"),es.forEach(l),An=i(n),Hn=c(n,"PRE",{class:!0}),u(Hn).forEach(l),Fn=i(n),Ln=c(n,"P",{});var os=u(Ln);Cn=r(os,"on a template :)"),os.forEach(l),Rn=i(n),Sn=c(n,"P",{});var ps=u(Sn);Yn=r(ps,"Note 1: Yes, the YOUR_COMPONENT_FILE_NAME is the name of your file, please change it ;)"),ps.forEach(l),$n=i(n),Dn=c(n,"P",{});var cs=u(Dn);In=r(cs,"Note 2: The props will be used on your "),Jn=c(cs,"CODE",{});var ls=u(Jn);Un=r(ls,"export"),ls.forEach(l),qn=r(cs," variables on the svelte component"),cs.forEach(l),this.h()},h(){document.title="How to add svelte on Elixir Phoenix Framework",k(s,"name","description"),k(s,"content","A blog post as a reminder on how to work with svelte on Elixir"),k(a,"name","keywords"),k(a,"content","elixir, svelte"),k(f,"property","og:title"),k(f,"content","Svelte on Elixir Phoenix Framework"),k(g,"property","og:description"),k(g,"content","A reminder on how to add svelte on Elixir Phoenix Framework with the minimum of enfort"),k(E,"itemprop","name"),k(M,"class","language-bash"),k(C,"href","https://github.com/sveltejs/template-webpack"),k(C,"rel","nofollow"),k(I,"class","language-js"),k(W,"class","language-javascript"),k(Q,"href","https://github.com/sveltejs/svelte-loader"),k(Q,"rel","nofollow"),k(ln,"class","language-elixir"),k(Pn,"class","language-javascript"),k(Hn,"class","language-elixir")},m(n,t){d(document.head,s),d(document.head,a),d(document.head,f),d(document.head,g),m(n,v,t),m(n,E,t),d(E,w),m(n,x,t),m(n,b,t),d(b,y),m(n,P,t),m(n,_,t),d(_,T),m(n,j,t),m(n,M,t),M.innerHTML='<code class="language-bash"><span class="token builtin class-name">cd</span> assets <span class="token operator">&amp;&amp;</span> <span class="token function">npm</span> <span class="token function">install</span> svelte svelte-loader --save</code>',m(n,O,t),m(n,N,t),d(N,A),m(n,H,t),m(n,F,t),d(F,L),d(F,C),d(C,R),m(n,S,t),m(n,Y,t),d(Y,$),m(n,D,t),m(n,I,t),I.innerHTML='<code class="language-js">resolve<span class="token operator">:</span> <span class="token punctuation">&#123;</span>\n\talias<span class="token operator">:</span> <span class="token punctuation">&#123;</span>\n\t\tsvelte<span class="token operator">:</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span><span class="token string">\'node_modules\'</span><span class="token punctuation">,</span> <span class="token string">\'svelte\'</span><span class="token punctuation">)</span>\n\t<span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n\textensions<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'.mjs\'</span><span class="token punctuation">,</span> <span class="token string">\'.js\'</span><span class="token punctuation">,</span> <span class="token string">\'.svelte\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n\tmainFields<span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'svelte\'</span><span class="token punctuation">,</span> <span class="token string">\'browser\'</span><span class="token punctuation">,</span> <span class="token string">\'module\'</span><span class="token punctuation">,</span> <span class="token string">\'main\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">&#125;</span></code>',m(n,J,t),m(n,U,t),d(U,q),m(n,B,t),m(n,W,t),W.innerHTML='<code class="language-javascript"><span class="token punctuation">&#123;</span>\n\ttest<span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.svelte$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">,</span>\n\tuse<span class="token operator">:</span> <span class="token punctuation">&#123;</span>\n\t\tloader<span class="token operator">:</span> <span class="token string">\'svelte-loader\'</span><span class="token punctuation">,</span>\n\t\toptions<span class="token operator">:</span> <span class="token punctuation">&#123;</span>\n\t\t\temitCss<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n\t\t\thotReload<span class="token operator">:</span> <span class="token boolean">true</span>\n\t\t<span class="token punctuation">&#125;</span>\n\t<span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',m(n,z,t),m(n,G,t),d(G,K),d(G,Q),d(Q,V),m(n,X,t),m(n,Z,t),d(Z,nn),m(n,sn,t),m(n,an,t),d(an,tn),d(an,en),d(en,on),d(an,pn),m(n,cn,t),m(n,ln,t),ln.innerHTML='<code class="language-elixir"><span class="token doc"><span class="token attribute">@doc</span> <span class="token string">"""\nWill add a component from the asserts/js/svelte, the component must have the same &#96;file_name&#96;\n"""</span></span>\n<span class="token attribute variable">@spec</span> <span class="token function">svelte</span><span class="token punctuation">(</span><span class="token function">bitstring</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">::</span> <span class="token module class-name">Phoenix</span><span class="token punctuation">.</span><span class="token module class-name">HTML</span><span class="token punctuation">.</span><span class="token function">safe</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token keyword">def</span> <span class="token function">svelte</span><span class="token punctuation">(</span>file_name<span class="token punctuation">,</span> props <span class="token operator">\\</span> <span class="token punctuation">%</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span> <span class="token keyword">do</span>\n  <span class="token punctuation">&#123;</span><span class="token atom symbol">:ok</span><span class="token punctuation">,</span> props<span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token module class-name">Jason</span><span class="token punctuation">.</span><span class="token function">encode</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span>\n\n  tag <span class="token operator">=</span>\n    <span class="token module class-name">Phoenix</span><span class="token punctuation">.</span><span class="token module class-name">HTML</span><span class="token punctuation">.</span><span class="token module class-name">Tag</span><span class="token punctuation">.</span><span class="token function">tag</span><span class="token punctuation">(</span><span class="token atom symbol">:div</span><span class="token punctuation">,</span>\n      <span class="token attr-name">data:</span> <span class="token punctuation">[</span><span class="token attr-name">props:</span> props<span class="token punctuation">]</span><span class="token punctuation">,</span>\n      <span class="token attr-name">class:</span> <span class="token string">"__svelte__-<span class="token interpolation"><span class="token delimiter punctuation">#&#123;</span>file_name<span class="token delimiter punctuation">&#125;</span></span>"</span>\n    <span class="token punctuation">)</span>\n    <span class="token operator">|></span> <span class="token module class-name">Phoenix</span><span class="token punctuation">.</span><span class="token module class-name">HTML</span><span class="token punctuation">.</span><span class="token function">safe_to_string</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n\n  <span class="token module class-name">Phoenix</span><span class="token punctuation">.</span><span class="token module class-name">HTML</span><span class="token punctuation">.</span><span class="token function">raw</span><span class="token punctuation">(</span>tag <span class="token operator">&lt;></span> <span class="token string">"&lt;/div>"</span><span class="token punctuation">)</span>\n<span class="token keyword">end</span></code>',m(n,un,t),m(n,rn,t),d(rn,kn),d(kn,dn),m(n,mn,t),m(n,hn,t),d(hn,fn),m(n,gn,t),m(n,vn,t),d(vn,En),d(vn,wn),d(wn,xn),d(vn,bn),m(n,yn,t),m(n,Pn,t),Pn.innerHTML='<code class="language-javascript"><span class="token comment">// This code will look in the assets/js/svelte/ and in the sub-directorys for</span>\n<span class="token comment">// .svelte files, the result of this files will be mounted on the element</span>\n<span class="token comment">// "svelte-file_name" who have props from the phoenix render(name, props)</span>\n\n<span class="token comment">// directory, useSubdirectories, regex</span>\n<span class="token keyword">const</span> context <span class="token operator">=</span> require<span class="token punctuation">.</span><span class="token function">context</span><span class="token punctuation">(</span><span class="token string">"./svelte"</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">.svelte$</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nwindow<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n  context<span class="token punctuation">.</span><span class="token function">keys</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span><span class="token parameter">file_path</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>\n    <span class="token comment">// name that will be requeride by render(name, props)</span>\n    <span class="token keyword">const</span> file_name <span class="token operator">=</span> file_path<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">./|.svelte$</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token comment">// COMPONENT</span>\n    <span class="token keyword">const</span> component_name <span class="token operator">=</span> <span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">svelte-</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>file_name<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> component_container <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>component_name<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token operator">!</span>component_container<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n      <span class="token keyword">return</span><span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span>\n\n    <span class="token comment">// PROPS</span>\n    <span class="token keyword">const</span> <span class="token punctuation">&#123;</span> props <span class="token punctuation">&#125;</span> <span class="token operator">=</span> component_container<span class="token punctuation">.</span>dataset<span class="token punctuation">;</span>\n    <span class="token keyword">let</span> my_props <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>\n    <span class="token keyword">if</span> <span class="token punctuation">(</span>props<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>\n      my_props <span class="token operator">=</span> <span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">parse</span><span class="token punctuation">(</span>props<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">&#125;</span>\n\n    <span class="token comment">// MOUNT ON</span>\n    <span class="token keyword">const</span> App <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">&#96;</span><span class="token string">./svelte/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>file_name<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">&#96;</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">new</span> <span class="token class-name">App<span class="token punctuation">.</span>default</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>\n      target<span class="token operator">:</span> component_container<span class="token punctuation">,</span>\n      props<span class="token operator">:</span> my_props\n    <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span><span class="token punctuation">;</span></code>',m(n,_n,t),m(n,Tn,t),d(Tn,jn),m(n,Mn,t),m(n,On,t),d(On,Nn),m(n,An,t),m(n,Hn,t),Hn.innerHTML='<code class="language-elixir">&lt;<span class="token punctuation">%</span><span class="token operator">=</span> svelte <span class="token string">"YOUR_COMPONENT_FILE_NAME"</span><span class="token punctuation">,</span> <span class="token punctuation">%</span><span class="token punctuation">&#123;</span><span class="token attr-name">some_var:</span> <span class="token string">"some value"</span><span class="token punctuation">&#125;</span> <span class="token punctuation">%</span><span class="token operator">></span></code>',m(n,Fn,t),m(n,Ln,t),d(Ln,Cn),m(n,Rn,t),m(n,Sn,t),d(Sn,Yn),m(n,$n,t),m(n,Dn,t),d(Dn,In),d(Dn,Jn),d(Jn,Un),d(Dn,qn)},p:h,i:h,o:h,d(n){l(s),l(a),l(f),l(g),n&&l(v),n&&l(E),n&&l(x),n&&l(b),n&&l(P),n&&l(_),n&&l(j),n&&l(M),n&&l(O),n&&l(N),n&&l(H),n&&l(F),n&&l(S),n&&l(Y),n&&l(D),n&&l(I),n&&l(J),n&&l(U),n&&l(B),n&&l(W),n&&l(z),n&&l(G),n&&l(X),n&&l(Z),n&&l(sn),n&&l(an),n&&l(cn),n&&l(ln),n&&l(un),n&&l(rn),n&&l(mn),n&&l(hn),n&&l(gn),n&&l(vn),n&&l(yn),n&&l(Pn),n&&l(_n),n&&l(Tn),n&&l(Mn),n&&l(On),n&&l(An),n&&l(Hn),n&&l(Fn),n&&l(Ln),n&&l(Rn),n&&l(Sn),n&&l($n),n&&l(Dn)}}}class g extends n{constructor(n){super(),s(this,n,null,f,a,{})}}export{g as default};

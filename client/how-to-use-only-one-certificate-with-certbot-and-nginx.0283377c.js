import{S as n,i as s,s as a,e as t,a as e,t as p,q as o,c,f as l,g as r,b as i,d as k,h as d,k as u,j as w,n as y}from"./client.72070952.js";function v(n){let s,a,v,m,h,b,_,g,f,x,$,E,T,H,F,A,P,R,M,W,C,O,S;return{c(){s=t("meta"),a=t("meta"),v=t("meta"),m=t("meta"),h=e(),b=t("h1"),_=p("How to use only one certificate with certbot and nginx"),g=e(),f=t("p"),x=p("This is more a reminder for myself but anyway"),$=e(),E=t("p"),T=p("First, you need to generate the certificate with the certbot on the AWS, you need to put both the www and non-www url, otherwise the redirect will be invalid or the website will display a invalid certificate"),H=e(),F=t("pre"),A=e(),P=t("p"),R=p("Then, you need a Nginx like this:"),M=e(),W=t("pre"),C=e(),O=t("p"),S=p("Yes, good luck with the nginx file, I alread have a bad time learning all this shit :)"),this.h()},l(n){const t=o('[data-svelte="svelte-96n0k5"]',document.head);s=c(t,"META",{name:!0,content:!0}),a=c(t,"META",{name:!0,content:!0}),v=c(t,"META",{property:!0,content:!0}),m=c(t,"META",{property:!0,content:!0}),t.forEach(l),h=r(n),b=c(n,"H1",{itemprop:!0});var e=i(b);_=k(e,"How to use only one certificate with certbot and nginx"),e.forEach(l),g=r(n),f=c(n,"P",{});var p=i(f);x=k(p,"This is more a reminder for myself but anyway"),p.forEach(l),$=r(n),E=c(n,"P",{});var d=i(E);T=k(d,"First, you need to generate the certificate with the certbot on the AWS, you need to put both the www and non-www url, otherwise the redirect will be invalid or the website will display a invalid certificate"),d.forEach(l),H=r(n),F=c(n,"PRE",{class:!0}),i(F).forEach(l),A=r(n),P=c(n,"P",{});var u=i(P);R=k(u,"Then, you need a Nginx like this:"),u.forEach(l),M=r(n),W=c(n,"PRE",{class:!0}),i(W).forEach(l),C=r(n),O=c(n,"P",{});var w=i(O);S=k(w,"Yes, good luck with the nginx file, I alread have a bad time learning all this shit :)"),w.forEach(l),this.h()},h(){document.title="How to use only one certificate with certbot and nginx",d(s,"name","description"),d(s,"content","A blog post as a reminder on how to use only one certificate with certbot and nginx"),d(a,"name","keywords"),d(a,"content","aws, certbot, nginx"),d(v,"property","og:title"),d(v,"content","Use only one certificate with certbot and nginx"),d(m,"property","og:description"),d(m,"content","A reminder on how to use only one certificate with certbot and nginx with the minimum of enfort"),d(b,"itemprop","name"),d(F,"class","language-bash"),d(W,"class","language-nginx")},m(n,t){u(document.head,s),u(document.head,a),u(document.head,v),u(document.head,m),w(n,h,t),w(n,b,t),u(b,_),w(n,g,t),w(n,f,t),u(f,x),w(n,$,t),w(n,E,t),u(E,T),w(n,H,t),w(n,F,t),F.innerHTML='<code class="language-bash">  <span class="token function">sudo</span> certbot  -d shiryel.com -d www.shiryel.com -d blog.shiryel.com -d www.blog.shiryel.com -d webrtc.shiryel.com -d www.webrtc.shiryel.com</code>',w(n,A,t),w(n,P,t),u(P,R),w(n,M,t),w(n,W,t),W.innerHTML='<code class="language-nginx"><span class="token comment"># For more information on configuration, see:</span>\n<span class="token comment">#   * Official English Documentation: http://nginx.org/en/docs/</span>\n<span class="token comment">#   * Official Russian Documentation: http://nginx.org/ru/docs/</span>\n\n<span class="token directive"><span class="token keyword">user</span> nginx</span><span class="token punctuation">;</span>\n<span class="token directive"><span class="token keyword">worker_processes</span> auto</span><span class="token punctuation">;</span>\n<span class="token directive"><span class="token keyword">error_log</span> /var/log/nginx/error.log</span><span class="token punctuation">;</span>\n<span class="token directive"><span class="token keyword">pid</span> /run/nginx.pid</span><span class="token punctuation">;</span>\n\n<span class="token directive"><span class="token keyword">events</span></span> <span class="token punctuation">&#123;</span>\n\t<span class="token directive"><span class="token keyword">worker_connections</span> <span class="token number">1024</span></span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n\n<span class="token directive"><span class="token keyword">http</span></span> <span class="token punctuation">&#123;</span>\n\t<span class="token directive"><span class="token keyword">log_format</span> main <span class="token string">\'<span class="token variable">$remote_addr</span> - <span class="token variable">$remote_user</span> [<span class="token variable">$time_local]</span> "<span class="token variable">$request</span>" \'</span>\n\t\t<span class="token string">\'<span class="token variable">$status</span> <span class="token variable">$body_bytes_sent</span> "<span class="token variable">$http_referer</span>" \'</span>\n\t\t<span class="token string">\'"<span class="token variable">$http_user_agent</span>" "<span class="token variable">$http_x_forwarded_for</span>"\'</span></span><span class="token punctuation">;</span>\n\t<span class="token directive"><span class="token keyword">access_log</span> /var/log/nginx/access.log main</span><span class="token punctuation">;</span>\n\n\t<span class="token directive"><span class="token keyword">sendfile</span> <span class="token boolean">on</span></span><span class="token punctuation">;</span>\n\t<span class="token directive"><span class="token keyword">tcp_nopush</span> <span class="token boolean">on</span></span><span class="token punctuation">;</span>\n\t<span class="token directive"><span class="token keyword">tcp_nodelay</span> <span class="token boolean">on</span></span><span class="token punctuation">;</span>\n\t<span class="token directive"><span class="token keyword">keepalive_timeout</span> <span class="token number">65</span></span><span class="token punctuation">;</span>\n\t<span class="token directive"><span class="token keyword">types_hash_max_size</span> <span class="token number">2048</span></span><span class="token punctuation">;</span>\n\n\t<span class="token directive"><span class="token keyword">include</span> /etc/nginx/mime.types</span><span class="token punctuation">;</span>\n\t<span class="token directive"><span class="token keyword">default_type</span> text/plain</span><span class="token punctuation">;</span>\n\n\t<span class="token comment">###########</span>\n\t<span class="token comment"># CERTBOT #</span>\n\t<span class="token comment">###########</span>\n\n  <span class="token directive"><span class="token keyword">ssl_certificate</span> /etc/letsencrypt/live/shiryel.com/fullchain.pem</span><span class="token punctuation">;</span> <span class="token comment"># managed by Certbot</span>\n  <span class="token directive"><span class="token keyword">ssl_certificate_key</span> /etc/letsencrypt/live/shiryel.com/privkey.pem</span><span class="token punctuation">;</span> <span class="token comment"># managed by Certbot</span>\n\t<span class="token directive"><span class="token keyword">ssl_dhparam</span> /etc/letsencrypt/ssl-dhparams.pem</span><span class="token punctuation">;</span>\n\t<span class="token comment"># Automatic important security parameters (provided by certbot)</span>\n\t<span class="token directive"><span class="token keyword">include</span> /etc/letsencrypt/options-ssl-nginx.conf</span><span class="token punctuation">;</span>\n\n\t<span class="token comment">#################</span>\n\t<span class="token comment"># ENFORCE HTTPS #</span>\n\t<span class="token comment">#################</span>\n\n\t<span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">&#123;</span>\n\t\t<span class="token directive"><span class="token keyword">listen</span> <span class="token number">80</span> default_server</span><span class="token punctuation">;</span>\n\t\t<span class="token directive"><span class="token keyword">server_name</span> _</span><span class="token punctuation">;</span>\n\t\n\t\t<span class="token directive"><span class="token keyword">return</span> <span class="token number">301</span> https://<span class="token variable">$host</span><span class="token variable">$request_uri</span></span><span class="token punctuation">;</span>\n\t<span class="token punctuation">&#125;</span>\n\n\t<span class="token comment">########</span>\n\t<span class="token comment"># HOME #</span>\n\t<span class="token comment">########</span>\n\n\t<span class="token comment"># Dont have non-www because the DNS redirect to WWW</span>\n\t<span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">&#123;</span>\n\t\t<span class="token directive"><span class="token keyword">server_name</span> www.shiryel.com</span><span class="token punctuation">;</span>\n\t\t<span class="token directive"><span class="token keyword">listen</span> <span class="token number">443</span> ssl http2</span><span class="token punctuation">;</span>\n\t\t<span class="token directive"><span class="token keyword">listen</span> [::]:443 ssl http2</span><span class="token punctuation">;</span>\n\n\t\t<span class="token directive"><span class="token keyword">location</span> /</span> <span class="token punctuation">&#123;</span>\n\t\t\t<span class="token directive"><span class="token keyword">root</span> /www/shiryel</span><span class="token punctuation">;</span>\n\t\t\t<span class="token directive"><span class="token keyword">index</span> shiryel.html</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">&#125;</span>\n\t<span class="token punctuation">&#125;</span>\n\n\t<span class="token comment">##########</span>\n\t<span class="token comment"># WEBRTC #</span>\n\t<span class="token comment">##########</span>\n\n\t<span class="token directive"><span class="token keyword">upstream</span> docker-webrtc</span> <span class="token punctuation">&#123;</span>\n\t\t<span class="token directive"><span class="token keyword">server</span> 0.0.0.0:5001</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">&#125;</span>\n\n\t<span class="token directive"><span class="token keyword">upstream</span> docker-webrtc-server</span> <span class="token punctuation">&#123;</span>\n\t\t<span class="token directive"><span class="token keyword">server</span> 0.0.0.0:4001</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">&#125;</span>\n\n\t<span class="token directive"><span class="token keyword">map</span> <span class="token variable">$http_upgrade</span> <span class="token variable">$connection_upgrade</span></span> <span class="token punctuation">&#123;</span>\n\t\t<span class="token directive"><span class="token keyword">default</span> upgrade</span><span class="token punctuation">;</span>\n\t\t\'\'      <span class="token directive"><span class="token keyword">close</span></span><span class="token punctuation">;</span>\n\t<span class="token punctuation">&#125;</span>\n\n\t<span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">&#123;</span>\n\t\t<span class="token directive"><span class="token keyword">server_name</span> www.webrtc.shiryel.com</span><span class="token punctuation">;</span>\n\t\t<span class="token directive"><span class="token keyword">listen</span> <span class="token number">443</span> ssl http2</span><span class="token punctuation">;</span>\n\t\t<span class="token directive"><span class="token keyword">listen</span> [::]:443 ssl http2</span><span class="token punctuation">;</span>\n\n\t\t<span class="token directive"><span class="token keyword">return</span> <span class="token number">301</span> <span class="token variable">$scheme</span>://webrtc.shiryel.com/<span class="token variable">$request_uri</span></span><span class="token punctuation">;</span>\n\t<span class="token punctuation">&#125;</span>\n\n\t<span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">&#123;</span>\n\t\t<span class="token directive"><span class="token keyword">server_name</span> webrtc.shiryel.com</span><span class="token punctuation">;</span>\n\t\t<span class="token directive"><span class="token keyword">listen</span> <span class="token number">443</span> ssl http2</span><span class="token punctuation">;</span>\n\t\t<span class="token directive"><span class="token keyword">listen</span> [::]:443 ssl http2</span><span class="token punctuation">;</span>\n\n\t\t<span class="token directive"><span class="token keyword">location</span> /</span> <span class="token punctuation">&#123;</span>\n\t\t\t<span class="token directive"><span class="token keyword">proxy_pass</span>         http://docker-webrtc</span><span class="token punctuation">;</span>\n\t\t\t<span class="token directive"><span class="token keyword">proxy_redirect</span>     <span class="token boolean">off</span></span><span class="token punctuation">;</span>\n\t\t\t<span class="token directive"><span class="token keyword">proxy_set_header</span>   Host <span class="token variable">$host</span></span><span class="token punctuation">;</span>\n\t\t\t<span class="token directive"><span class="token keyword">proxy_set_header</span>   X-Real-IP <span class="token variable">$remote_addr</span></span><span class="token punctuation">;</span>\n\t\t\t<span class="token directive"><span class="token keyword">proxy_set_header</span>   X-Forwarded-For <span class="token variable">$proxy_add_x_forwarded_for</span></span><span class="token punctuation">;</span>\n\t\t\t<span class="token directive"><span class="token keyword">proxy_set_header</span>   X-Forwarded-Host <span class="token variable">$server_name</span></span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">&#125;</span>\n\t<span class="token punctuation">&#125;</span>\n\n\t<span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">&#123;</span>\n\t\t<span class="token directive"><span class="token keyword">server_name</span> webrtc-server.shiryel.com www.webrtc-server.shiryel.com</span><span class="token punctuation">;</span>\n\t\t<span class="token directive"><span class="token keyword">listen</span> <span class="token number">443</span> ssl http2</span><span class="token punctuation">;</span>\n\t\t<span class="token directive"><span class="token keyword">listen</span> [::]:443 ssl http2</span><span class="token punctuation">;</span>\n\n\t\t<span class="token directive"><span class="token keyword">location</span> /</span> <span class="token punctuation">&#123;</span>\n\t\t\t<span class="token directive"><span class="token keyword">proxy_pass</span>         http://docker-webrtc-server</span><span class="token punctuation">;</span>\n\t\t\t<span class="token directive"><span class="token keyword">proxy_set_header</span>   Host <span class="token variable">$host</span></span><span class="token punctuation">;</span>\n\t\t\t<span class="token directive"><span class="token keyword">proxy_set_header</span>   X-Real-IP <span class="token variable">$remote_addr</span></span><span class="token punctuation">;</span>\n\t\t\t<span class="token directive"><span class="token keyword">proxy_set_header</span>   X-Forwarded-For <span class="token variable">$proxy_add_x_forwarded_for</span></span><span class="token punctuation">;</span>\n\t\t\t<span class="token directive"><span class="token keyword">proxy_set_header</span>   X-Forwarded-Host <span class="token variable">$server_name</span></span><span class="token punctuation">;</span>\n\n\t\t\t<span class="token comment"># WebSocket support</span>\n\t\t\t<span class="token directive"><span class="token keyword">proxy_http_version</span> 1.1</span><span class="token punctuation">;</span>\n\t\t\t<span class="token directive"><span class="token keyword">proxy_set_header</span>   Upgrade <span class="token variable">$http_upgrade</span></span><span class="token punctuation">;</span>\n\t\t\t<span class="token directive"><span class="token keyword">proxy_set_header</span>   Connection <span class="token variable">$connection_upgrade</span></span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">&#125;</span>\n\t<span class="token punctuation">&#125;</span>\n\n\t<span class="token comment">########</span>\n\t<span class="token comment"># BLOG #</span>\n\t<span class="token comment">########</span>\n\n\t<span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">&#123;</span>\n\t\t<span class="token directive"><span class="token keyword">server_name</span> www.blog.shiryel.com</span><span class="token punctuation">;</span>\n\t\t<span class="token directive"><span class="token keyword">listen</span> <span class="token number">443</span> ssl http2</span><span class="token punctuation">;</span>\n\t\t<span class="token directive"><span class="token keyword">listen</span> [::]:443 ssl http2</span><span class="token punctuation">;</span>\n\n\t\t<span class="token directive"><span class="token keyword">return</span> <span class="token number">301</span> <span class="token variable">$scheme</span>://blog.shiryel.com/<span class="token variable">$request_uri</span></span><span class="token punctuation">;</span>\n\t<span class="token punctuation">&#125;</span>\n\n\t<span class="token directive"><span class="token keyword">server</span></span> <span class="token punctuation">&#123;</span>\n\t\t<span class="token directive"><span class="token keyword">server_name</span> blog.shiryel.com</span><span class="token punctuation">;</span>\n\t\t<span class="token directive"><span class="token keyword">listen</span> <span class="token number">443</span> ssl http2</span><span class="token punctuation">;</span>\n\t\t<span class="token directive"><span class="token keyword">listen</span> [::]:443 ssl http2</span><span class="token punctuation">;</span>\n\n\t\t<span class="token directive"><span class="token keyword">location</span> /</span> <span class="token punctuation">&#123;</span>\n\t\t\t<span class="token directive"><span class="token keyword">root</span> /www/shiryel_blog</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">&#125;</span>\n\t<span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',w(n,C,t),w(n,O,t),u(O,S)},p:y,i:y,o:y,d(n){l(s),l(a),l(v),l(m),n&&l(h),n&&l(b),n&&l(g),n&&l(f),n&&l($),n&&l(E),n&&l(H),n&&l(F),n&&l(A),n&&l(P),n&&l(M),n&&l(W),n&&l(C),n&&l(O)}}}class m extends n{constructor(n){super(),s(this,n,null,v,a,{})}}export{m as default};

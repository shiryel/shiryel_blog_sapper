import{S as n,i as s,s as a,e as t,f as e,t as p,w as o,g as c,k as u,l,h as i,j as r,m as k,o as h,n as y,r as m}from"./client.be9c3b83.js";function d(n){let s,a,d,f,g,E,S,w,v,P,A,M,b,H,_,W,T,x,C,j,I,L,N,R,$,F,K,D,q,O,Y,z,B,G,J,Q,U,V,X,Z,nn,sn,an,tn,en,pn,on,cn,un,ln,rn,kn,hn,yn,mn,dn,fn,gn,En,Sn,wn,vn,Pn,An,Mn,bn,Hn,_n,Wn,Tn,xn,Cn,jn,In,Ln,Nn,Rn,$n;return{c(){s=t("meta"),a=t("meta"),d=e(),f=t("h1"),g=p("How to push a static website to AWS using github actions"),E=e(),S=t("p"),w=p("This is my personal default template for npm projects:"),v=e(),P=t("pre"),A=e(),M=t("p"),b=p("So lets see what hapens here"),H=e(),_=t("h2"),W=p("First, the scope"),T=e(),x=t("pre"),C=e(),j=t("p"),I=p("This says to run this script when a push is made on the master branch"),L=e(),N=t("h2"),R=p("Then the machine pre-config"),$=e(),F=t("pre"),K=e(),D=t("p"),q=p("This says to run a countainer on ubuntu (latest version), get the code with checkout, and setup a node version 14"),O=e(),Y=t("h2"),z=p("NPM need to make the NPM things"),B=e(),G=t("pre"),J=e(),Q=t("p"),U=p("Yes"),V=e(),X=t("h2"),Z=p("AWS time, first the PEM"),nn=e(),sn=t("p"),an=p("With the PEM on hands, you add it on your github secrets (keep in mind that this aproach is for very small projects, you may want another aproach)\nAnd create a PEM file on your machine"),tn=e(),en=t("pre"),pn=e(),on=t("h2"),cn=p("Then I delete the current static files on AWS if it exists"),un=e(),ln=t("p"),rn=p("In my case I like to put the SSH connection (that who you get for connecting on the AWS with your PEM) as a secret (the AWS_SSH)"),kn=e(),hn=t("pre"),yn=e(),mn=t("p"),dn=p("And yes, make the path modifications for your own files"),fn=e(),gn=t("h2"),En=p("Finally I send the files to the server"),Sn=e(),wn=t("pre"),vn=e(),Pn=t("p"),An=p("Modify the "),Mn=t("code"),bn=p("__sapper__/export"),Hn=p(" and "),_n=t("code"),Wn=p("/www/shiryel_blog"),Tn=p(" for your needs :)"),xn=e(),Cn=t("h2"),jn=p("And even if it fails… remove the PEM"),In=e(),Ln=t("pre"),Nn=e(),Rn=t("p"),$n=p("That is all folks, have a grat day :)"),this.h()},l(n){const t=o('[data-svelte="svelte-1o5k5nr"]',document.head);s=c(t,"META",{name:!0,content:!0}),a=c(t,"META",{name:!0,content:!0}),t.forEach(u),d=l(n),f=c(n,"H1",{});var e=i(f);g=r(e,"How to push a static website to AWS using github actions"),e.forEach(u),E=l(n),S=c(n,"P",{});var p=i(S);w=r(p,"This is my personal default template for npm projects:"),p.forEach(u),v=l(n),P=c(n,"PRE",{class:!0}),i(P).forEach(u),A=l(n),M=c(n,"P",{});var k=i(M);b=r(k,"So lets see what hapens here"),k.forEach(u),H=l(n),_=c(n,"H2",{});var h=i(_);W=r(h,"First, the scope"),h.forEach(u),T=l(n),x=c(n,"PRE",{class:!0}),i(x).forEach(u),C=l(n),j=c(n,"P",{});var y=i(j);I=r(y,"This says to run this script when a push is made on the master branch"),y.forEach(u),L=l(n),N=c(n,"H2",{});var m=i(N);R=r(m,"Then the machine pre-config"),m.forEach(u),$=l(n),F=c(n,"PRE",{class:!0}),i(F).forEach(u),K=l(n),D=c(n,"P",{});var Fn=i(D);q=r(Fn,"This says to run a countainer on ubuntu (latest version), get the code with checkout, and setup a node version 14"),Fn.forEach(u),O=l(n),Y=c(n,"H2",{});var Kn=i(Y);z=r(Kn,"NPM need to make the NPM things"),Kn.forEach(u),B=l(n),G=c(n,"PRE",{class:!0}),i(G).forEach(u),J=l(n),Q=c(n,"P",{});var Dn=i(Q);U=r(Dn,"Yes"),Dn.forEach(u),V=l(n),X=c(n,"H2",{});var qn=i(X);Z=r(qn,"AWS time, first the PEM"),qn.forEach(u),nn=l(n),sn=c(n,"P",{});var On=i(sn);an=r(On,"With the PEM on hands, you add it on your github secrets (keep in mind that this aproach is for very small projects, you may want another aproach)\nAnd create a PEM file on your machine"),On.forEach(u),tn=l(n),en=c(n,"PRE",{class:!0}),i(en).forEach(u),pn=l(n),on=c(n,"H2",{});var Yn=i(on);cn=r(Yn,"Then I delete the current static files on AWS if it exists"),Yn.forEach(u),un=l(n),ln=c(n,"P",{});var zn=i(ln);rn=r(zn,"In my case I like to put the SSH connection (that who you get for connecting on the AWS with your PEM) as a secret (the AWS_SSH)"),zn.forEach(u),kn=l(n),hn=c(n,"PRE",{class:!0}),i(hn).forEach(u),yn=l(n),mn=c(n,"P",{});var Bn=i(mn);dn=r(Bn,"And yes, make the path modifications for your own files"),Bn.forEach(u),fn=l(n),gn=c(n,"H2",{});var Gn=i(gn);En=r(Gn,"Finally I send the files to the server"),Gn.forEach(u),Sn=l(n),wn=c(n,"PRE",{class:!0}),i(wn).forEach(u),vn=l(n),Pn=c(n,"P",{});var Jn=i(Pn);An=r(Jn,"Modify the "),Mn=c(Jn,"CODE",{});var Qn=i(Mn);bn=r(Qn,"__sapper__/export"),Qn.forEach(u),Hn=r(Jn," and "),_n=c(Jn,"CODE",{});var Un=i(_n);Wn=r(Un,"/www/shiryel_blog"),Un.forEach(u),Tn=r(Jn," for your needs :)"),Jn.forEach(u),xn=l(n),Cn=c(n,"H2",{});var Vn=i(Cn);jn=r(Vn,"And even if it fails… remove the PEM"),Vn.forEach(u),In=l(n),Ln=c(n,"PRE",{class:!0}),i(Ln).forEach(u),Nn=l(n),Rn=c(n,"P",{});var Xn=i(Rn);$n=r(Xn,"That is all folks, have a grat day :)"),Xn.forEach(u),this.h()},h(){document.title="How to push a static website to AWS using github actions",k(s,"name","description"),k(s,"content","A blog post as a reminder on how to work with static websites on AWS using github actions"),k(a,"name","keywords"),k(a,"content","aws, github actions, static website"),k(P,"class","language-yml"),k(x,"class","language-yml"),k(F,"class","language-yml"),k(G,"class","language-yml"),k(en,"class","language-yml"),k(hn,"class","language-yml"),k(wn,"class","language-yml"),k(Ln,"class","language-yml")},m(n,t){h(document.head,s),h(document.head,a),y(n,d,t),y(n,f,t),h(f,g),y(n,E,t),y(n,S,t),h(S,w),y(n,v,t),y(n,P,t),P.innerHTML='\n<code class="language-yml"><span class="token key atrule">name</span><span class="token punctuation">:</span> Push to AWS <span class="token punctuation">[</span>CD<span class="token punctuation">]</span>\n\n<span class="token key atrule">on</span><span class="token punctuation">:</span>\n  <span class="token key atrule">push</span><span class="token punctuation">:</span>\n    <span class="token key atrule">branches</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> master <span class="token punctuation">]</span>\n\n<span class="token key atrule">jobs</span><span class="token punctuation">:</span>\n  <span class="token key atrule">build</span><span class="token punctuation">:</span>\n    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest\n\n    <span class="token key atrule">steps</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v2\n    <span class="token punctuation">-</span> <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>node@v1\n      <span class="token key atrule">with</span><span class="token punctuation">:</span>\n        <span class="token key atrule">node-version</span><span class="token punctuation">:</span> 14.x \n    \n    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> NPM <span class="token punctuation">-</span> install\n      <span class="token key atrule">run</span><span class="token punctuation">:</span> npm i\n    \n    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> NPM <span class="token punctuation">-</span> export\n      <span class="token key atrule">run</span><span class="token punctuation">:</span> npm run export\n\n    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> AWS <span class="token punctuation">-</span> Set PEM\n      <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">\n        echo "$&#123;&#123; secrets.AWS_PEM &#125;&#125;" > temp.pem\n        chmod 400 temp.pem</span>\n\n    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> AWS <span class="token punctuation">-</span> Exclude last files if exists\n      <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">\n           ssh -q -o "StrictHostKeyChecking no" -i temp.pem $&#123;&#123; secrets.AWS_SSH &#125;&#125; \\\n             rm -r /www/shiryel_blog/*</span>\n\n    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> AWS <span class="token punctuation">-</span> Send new files to server\n      <span class="token key atrule">if</span><span class="token punctuation">:</span> success() <span class="token punctuation">|</span><span class="token punctuation">|</span> failure()\n      <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">\n        scp -o "StrictHostKeyChecking no" -i temp.pem  -r \\\n          __sapper__/export/* $&#123;&#123; secrets.AWS_SSH &#125;&#125;:/www/shiryel_blog/</span>\n\n    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> AWS <span class="token punctuation">-</span> Clear PEM\n      <span class="token key atrule">if</span><span class="token punctuation">:</span> always()\n      <span class="token key atrule">run</span><span class="token punctuation">:</span> rm <span class="token punctuation">-</span>f temp.pem</code>',y(n,A,t),y(n,M,t),h(M,b),y(n,H,t),y(n,_,t),h(_,W),y(n,T,t),y(n,x,t),x.innerHTML='\n<code class="language-yml"><span class="token key atrule">on</span><span class="token punctuation">:</span>\n  <span class="token key atrule">push</span><span class="token punctuation">:</span>\n    <span class="token key atrule">branches</span><span class="token punctuation">:</span> <span class="token punctuation">[</span> master <span class="token punctuation">]</span></code>',y(n,C,t),y(n,j,t),h(j,I),y(n,L,t),y(n,N,t),h(N,R),y(n,$,t),y(n,F,t),F.innerHTML='\n<code class="language-yml"><span class="token key atrule">jobs</span><span class="token punctuation">:</span>\n  <span class="token key atrule">build</span><span class="token punctuation">:</span>\n    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest\n\n    <span class="token key atrule">steps</span><span class="token punctuation">:</span>\n    <span class="token punctuation">-</span> <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v2\n    <span class="token punctuation">-</span> <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>node@v1\n      <span class="token key atrule">with</span><span class="token punctuation">:</span>\n        <span class="token key atrule">node-version</span><span class="token punctuation">:</span> 14.x </code>',y(n,K,t),y(n,D,t),h(D,q),y(n,O,t),y(n,Y,t),h(Y,z),y(n,B,t),y(n,G,t),G.innerHTML='\n<code class="language-yml">    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> NPM <span class="token punctuation">-</span> install\n      <span class="token key atrule">run</span><span class="token punctuation">:</span> npm i\n    \n    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> NPM <span class="token punctuation">-</span> export\n      <span class="token key atrule">run</span><span class="token punctuation">:</span> npm run export</code>',y(n,J,t),y(n,Q,t),h(Q,U),y(n,V,t),y(n,X,t),h(X,Z),y(n,nn,t),y(n,sn,t),h(sn,an),y(n,tn,t),y(n,en,t),en.innerHTML='\n<code class="language-yml">    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> AWS <span class="token punctuation">-</span> Set PEM\n      <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">\n        echo "$&#123;&#123; secrets.AWS_PEM &#125;&#125;" > temp.pem\n        chmod 400 temp.pem</span></code>',y(n,pn,t),y(n,on,t),h(on,cn),y(n,un,t),y(n,ln,t),h(ln,rn),y(n,kn,t),y(n,hn,t),hn.innerHTML='\n<code class="language-yml">    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> AWS <span class="token punctuation">-</span> Exclude last files if exists\n      <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">\n           ssh -q -o "StrictHostKeyChecking no" -i temp.pem $&#123;&#123; secrets.AWS_SSH &#125;&#125; \\\n             rm -r /www/shiryel_blog/*</span></code>',y(n,yn,t),y(n,mn,t),h(mn,dn),y(n,fn,t),y(n,gn,t),h(gn,En),y(n,Sn,t),y(n,wn,t),wn.innerHTML='\n<code class="language-yml">    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> AWS <span class="token punctuation">-</span> Send new files to server\n      <span class="token key atrule">if</span><span class="token punctuation">:</span> success() <span class="token punctuation">|</span><span class="token punctuation">|</span> failure()\n      <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">\n        scp -o "StrictHostKeyChecking no" -i temp.pem  -r \\\n          __sapper__/export/* $&#123;&#123; secrets.AWS_SSH &#125;&#125;:/www/shiryel_blog/</span></code>',y(n,vn,t),y(n,Pn,t),h(Pn,An),h(Pn,Mn),h(Mn,bn),h(Pn,Hn),h(Pn,_n),h(_n,Wn),h(Pn,Tn),y(n,xn,t),y(n,Cn,t),h(Cn,jn),y(n,In,t),y(n,Ln,t),Ln.innerHTML='\n<code class="language-yml">    <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> AWS <span class="token punctuation">-</span> Clear PEM\n      <span class="token key atrule">if</span><span class="token punctuation">:</span> always()\n      <span class="token key atrule">run</span><span class="token punctuation">:</span> rm <span class="token punctuation">-</span>f temp.pem</code>',y(n,Nn,t),y(n,Rn,t),h(Rn,$n)},p:m,i:m,o:m,d(n){u(s),u(a),n&&u(d),n&&u(f),n&&u(E),n&&u(S),n&&u(v),n&&u(P),n&&u(A),n&&u(M),n&&u(H),n&&u(_),n&&u(T),n&&u(x),n&&u(C),n&&u(j),n&&u(L),n&&u(N),n&&u($),n&&u(F),n&&u(K),n&&u(D),n&&u(O),n&&u(Y),n&&u(B),n&&u(G),n&&u(J),n&&u(Q),n&&u(V),n&&u(X),n&&u(nn),n&&u(sn),n&&u(tn),n&&u(en),n&&u(pn),n&&u(on),n&&u(un),n&&u(ln),n&&u(kn),n&&u(hn),n&&u(yn),n&&u(mn),n&&u(fn),n&&u(gn),n&&u(Sn),n&&u(wn),n&&u(vn),n&&u(Pn),n&&u(xn),n&&u(Cn),n&&u(In),n&&u(Ln),n&&u(Nn),n&&u(Rn)}}}export default class extends n{constructor(n){super(),s(this,n,null,d,a,{})}}

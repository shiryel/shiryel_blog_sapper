import{S as n,i as s,s as a,e as t,a as p,t as o,q as e,c,f as l,g as r,b as k,d as u,h as i,k as d,j as w,n as y}from"./client.1565d37b.js";function m(n){let s,a,m,h,b,_,g,v,f,x,$,E,T,H,F,P,R,W,q,A,C;return{c(){s=t("meta"),a=t("meta"),m=p(),h=t("h1"),b=o("How to use only one certificate with certbot and nginx"),_=p(),g=t("p"),v=o("This is more a reminder for myself but anyway"),f=p(),x=t("p"),$=o("First, you need to generate the certificate with the certbot on the AWS, you need to put both the www and non-www url, otherwise the redirect will be invalid or the website will display a invalid certificate"),E=p(),T=t("pre"),H=p(),F=t("p"),P=o("Then, you need a Nginx like this:"),R=p(),W=t("pre"),q=p(),A=t("p"),C=o("Yes, good luck with the nginx file, I alread have a bad time learning all this shit :)"),this.h()},l(n){const t=e('[data-svelte="svelte-1owgopq"]',document.head);s=c(t,"META",{name:!0,content:!0}),a=c(t,"META",{name:!0,content:!0}),t.forEach(l),m=r(n),h=c(n,"H1",{});var p=k(h);b=u(p,"How to use only one certificate with certbot and nginx"),p.forEach(l),_=r(n),g=c(n,"P",{});var o=k(g);v=u(o,"This is more a reminder for myself but anyway"),o.forEach(l),f=r(n),x=c(n,"P",{});var i=k(x);$=u(i,"First, you need to generate the certificate with the certbot on the AWS, you need to put both the www and non-www url, otherwise the redirect will be invalid or the website will display a invalid certificate"),i.forEach(l),E=r(n),T=c(n,"PRE",{class:!0}),k(T).forEach(l),H=r(n),F=c(n,"P",{});var d=k(F);P=u(d,"Then, you need a Nginx like this:"),d.forEach(l),R=r(n),W=c(n,"PRE",{class:!0}),k(W).forEach(l),q=r(n),A=c(n,"P",{});var w=k(A);C=u(w,"Yes, good luck with the nginx file, I alread have a bad time learning all this shit :)"),w.forEach(l),this.h()},h(){document.title="How to use only one certificate with certbot and nginx",i(s,"name","description"),i(s,"content","A blog post as a reminder on how to use only one certificate with certbot and nginx"),i(a,"name","keywords"),i(a,"content","aws, certbot, nginx"),i(T,"class","language-bash"),i(W,"class","language-nginx")},m(n,t){d(document.head,s),d(document.head,a),w(n,m,t),w(n,h,t),d(h,b),w(n,_,t),w(n,g,t),d(g,v),w(n,f,t),w(n,x,t),d(x,$),w(n,E,t),w(n,T,t),T.innerHTML='\n<code class="language-bash">  <span class="token function">sudo</span> certbot  -d shiryel.com -d www.shiryel.com -d blog.shiryel.com -d www.blog.shiryel.com -d webrtc.shiryel.com -d www.webrtc.shiryel.com</code>',w(n,H,t),w(n,F,t),d(F,P),w(n,R,t),w(n,W,t),W.innerHTML='\n<code class="language-nginx"><span class="token comment"># For more information on configuration, see:</span>\n<span class="token comment">#   * Official English Documentation: http://nginx.org/en/docs/</span>\n<span class="token comment">#   * Official Russian Documentation: http://nginx.org/ru/docs/</span>\n\n<span class="token keyword">user</span> nginx<span class="token punctuation">;</span>\n<span class="token keyword">worker_processes</span> auto<span class="token punctuation">;</span>\n<span class="token keyword">error_log</span> <span class="token operator">/</span>var<span class="token operator">/</span>log<span class="token operator">/</span>nginx<span class="token operator">/</span>error<span class="token punctuation">.</span>log<span class="token punctuation">;</span>\n<span class="token keyword">pid</span> <span class="token operator">/</span>run<span class="token operator">/</span>nginx<span class="token punctuation">.</span><span class="token keyword">pid</span><span class="token punctuation">;</span>\n\n<span class="token keyword">events</span> <span class="token punctuation">&#123;</span>\n\t<span class="token keyword">worker_connections</span> <span class="token number">1024</span><span class="token punctuation">;</span>\n<span class="token punctuation">&#125;</span>\n\n<span class="token keyword">http</span> <span class="token punctuation">&#123;</span>\n\t<span class="token keyword">log_format</span> main <span class="token string">\'$remote_addr - $remote_user [$time_local] "$request" \'</span>\n\t\t<span class="token string">\'$status $body_bytes_sent "$http_referer" \'</span>\n\t\t<span class="token string">\'"$http_user_agent" "$http_x_forwarded_for"\'</span><span class="token punctuation">;</span>\n\t<span class="token keyword">access_log</span> <span class="token operator">/</span>var<span class="token operator">/</span>log<span class="token operator">/</span>nginx<span class="token operator">/</span>access<span class="token punctuation">.</span>log main<span class="token punctuation">;</span>\n\n\t<span class="token keyword">sendfile</span> on<span class="token punctuation">;</span>\n\t<span class="token keyword">tcp_nopush</span> on<span class="token punctuation">;</span>\n\t<span class="token keyword">tcp_nodelay</span> on<span class="token punctuation">;</span>\n\t<span class="token keyword">keepalive_timeout</span> <span class="token number">65</span><span class="token punctuation">;</span>\n\t<span class="token keyword">types_hash_max_size</span> <span class="token number">2048</span><span class="token punctuation">;</span>\n\n\t<span class="token keyword">include</span> <span class="token operator">/</span>etc<span class="token operator">/</span>nginx<span class="token operator">/</span>mime<span class="token punctuation">.</span><span class="token keyword">types</span><span class="token punctuation">;</span>\n\t<span class="token keyword">default_type</span> text<span class="token operator">/</span>plain<span class="token punctuation">;</span>\n\n\t<span class="token comment">###########</span>\n\t<span class="token comment"># CERTBOT #</span>\n\t<span class="token comment">###########</span>\n\n  <span class="token keyword">ssl_certificate</span> <span class="token operator">/</span>etc<span class="token operator">/</span>letsencrypt<span class="token operator">/</span>live<span class="token operator">/</span>shiryel<span class="token punctuation">.</span>com<span class="token operator">/</span>fullchain<span class="token punctuation">.</span>pem<span class="token punctuation">;</span> <span class="token comment"># managed by Certbot</span>\n  <span class="token keyword">ssl_certificate_key</span> <span class="token operator">/</span>etc<span class="token operator">/</span>letsencrypt<span class="token operator">/</span>live<span class="token operator">/</span>shiryel<span class="token punctuation">.</span>com<span class="token operator">/</span>privkey<span class="token punctuation">.</span>pem<span class="token punctuation">;</span> <span class="token comment"># managed by Certbot</span>\n\t<span class="token keyword">ssl_dhparam</span> <span class="token operator">/</span>etc<span class="token operator">/</span>letsencrypt<span class="token operator">/</span><span class="token keyword">ssl</span><span class="token operator">-</span>dhparams<span class="token punctuation">.</span>pem<span class="token punctuation">;</span>\n\t<span class="token comment"># Automatic important security parameters (provided by certbot)</span>\n\t<span class="token keyword">include</span> <span class="token operator">/</span>etc<span class="token operator">/</span>letsencrypt<span class="token operator">/</span>options<span class="token operator">-</span><span class="token keyword">ssl</span><span class="token operator">-</span>nginx<span class="token punctuation">.</span>conf<span class="token punctuation">;</span>\n\n\t<span class="token comment">#################</span>\n\t<span class="token comment"># ENFORCE HTTPS #</span>\n\t<span class="token comment">#################</span>\n\n\t<span class="token keyword">server</span> <span class="token punctuation">&#123;</span>\n\t\t<span class="token keyword">listen</span> <span class="token number">80</span> default_server<span class="token punctuation">;</span>\n\t\t<span class="token keyword">server_name</span> _<span class="token punctuation">;</span>\n\t\n\t\t<span class="token keyword">return</span> <span class="token number">301</span> <span class="token keyword">https</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token variable">$host</span><span class="token variable">$request_uri</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">&#125;</span>\n\n\t<span class="token comment">########</span>\n\t<span class="token comment"># HOME #</span>\n\t<span class="token comment">########</span>\n\n\t<span class="token comment"># Dont have non-www because the DNS redirect to WWW</span>\n\t<span class="token keyword">server</span> <span class="token punctuation">&#123;</span>\n\t\t<span class="token keyword">server_name</span> www<span class="token punctuation">.</span>shiryel<span class="token punctuation">.</span>com<span class="token punctuation">;</span>\n\t\t<span class="token keyword">listen</span> <span class="token number">443</span> <span class="token keyword">ssl</span> http2<span class="token punctuation">;</span>\n\t\t<span class="token keyword">listen</span> <span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token number">443</span> <span class="token keyword">ssl</span> http2<span class="token punctuation">;</span>\n\n\t\t<span class="token keyword">location</span> <span class="token operator">/</span> <span class="token punctuation">&#123;</span>\n\t\t\t<span class="token keyword">root</span> <span class="token operator">/</span>www<span class="token operator">/</span>shiryel<span class="token punctuation">;</span>\n\t\t\t<span class="token keyword">index</span> shiryel<span class="token punctuation">.</span>html<span class="token punctuation">;</span>\n\t\t<span class="token punctuation">&#125;</span>\n\t<span class="token punctuation">&#125;</span>\n\n\t<span class="token comment">##########</span>\n\t<span class="token comment"># WEBRTC #</span>\n\t<span class="token comment">##########</span>\n\n\t<span class="token keyword">upstream</span> docker<span class="token operator">-</span>webrtc <span class="token punctuation">&#123;</span>\n\t\t<span class="token keyword">server</span> <span class="token number">0.0</span><span class="token number">.0</span><span class="token number">.0</span><span class="token punctuation">:</span><span class="token number">5001</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">&#125;</span>\n\n\t<span class="token keyword">upstream</span> docker<span class="token operator">-</span>webrtc<span class="token operator">-</span><span class="token keyword">server</span> <span class="token punctuation">&#123;</span>\n\t\t<span class="token keyword">server</span> <span class="token number">0.0</span><span class="token number">.0</span><span class="token number">.0</span><span class="token punctuation">:</span><span class="token number">4001</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">&#125;</span>\n\n\t<span class="token keyword">map</span> <span class="token variable">$http_upgrade</span> <span class="token variable">$connection_upgrade</span> <span class="token punctuation">&#123;</span>\n\t\tdefault upgrade<span class="token punctuation">;</span>\n\t\t<span class="token string">\'\'</span>      close<span class="token punctuation">;</span>\n\t<span class="token punctuation">&#125;</span>\n\n\t<span class="token keyword">server</span> <span class="token punctuation">&#123;</span>\n\t\t<span class="token keyword">server_name</span> www<span class="token punctuation">.</span>webrtc<span class="token punctuation">.</span>shiryel<span class="token punctuation">.</span>com<span class="token punctuation">;</span>\n\t\t<span class="token keyword">listen</span> <span class="token number">443</span> <span class="token keyword">ssl</span> http2<span class="token punctuation">;</span>\n\t\t<span class="token keyword">listen</span> <span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token number">443</span> <span class="token keyword">ssl</span> http2<span class="token punctuation">;</span>\n\n\t\t<span class="token keyword">return</span> <span class="token number">301</span> <span class="token variable">$scheme</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>webrtc<span class="token punctuation">.</span>shiryel<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token variable">$request_uri</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">&#125;</span>\n\n\t<span class="token keyword">server</span> <span class="token punctuation">&#123;</span>\n\t\t<span class="token keyword">server_name</span> webrtc<span class="token punctuation">.</span>shiryel<span class="token punctuation">.</span>com<span class="token punctuation">;</span>\n\t\t<span class="token keyword">listen</span> <span class="token number">443</span> <span class="token keyword">ssl</span> http2<span class="token punctuation">;</span>\n\t\t<span class="token keyword">listen</span> <span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token number">443</span> <span class="token keyword">ssl</span> http2<span class="token punctuation">;</span>\n\n\t\t<span class="token keyword">location</span> <span class="token operator">/</span> <span class="token punctuation">&#123;</span>\n\t\t\t<span class="token keyword">proxy_pass</span>         <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>docker<span class="token operator">-</span>webrtc<span class="token punctuation">;</span>\n\t\t\t<span class="token keyword">proxy_redirect</span>     off<span class="token punctuation">;</span>\n\t\t\t<span class="token keyword">proxy_set_header</span>   Host <span class="token variable">$host</span><span class="token punctuation">;</span>\n\t\t\t<span class="token keyword">proxy_set_header</span>   X<span class="token operator">-</span>Real<span class="token operator">-</span>IP <span class="token variable">$remote_addr</span><span class="token punctuation">;</span>\n\t\t\t<span class="token keyword">proxy_set_header</span>   X<span class="token operator">-</span>Forwarded<span class="token operator">-</span>For <span class="token variable">$proxy_add_x_forwarded_for</span><span class="token punctuation">;</span>\n\t\t\t<span class="token keyword">proxy_set_header</span>   X<span class="token operator">-</span>Forwarded<span class="token operator">-</span>Host <span class="token variable">$server_name</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">&#125;</span>\n\t<span class="token punctuation">&#125;</span>\n\n\t<span class="token keyword">server</span> <span class="token punctuation">&#123;</span>\n\t\t<span class="token keyword">server_name</span> webrtc<span class="token operator">-</span><span class="token keyword">server</span><span class="token punctuation">.</span>shiryel<span class="token punctuation">.</span>com www<span class="token punctuation">.</span>webrtc<span class="token operator">-</span><span class="token keyword">server</span><span class="token punctuation">.</span>shiryel<span class="token punctuation">.</span>com<span class="token punctuation">;</span>\n\t\t<span class="token keyword">listen</span> <span class="token number">443</span> <span class="token keyword">ssl</span> http2<span class="token punctuation">;</span>\n\t\t<span class="token keyword">listen</span> <span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token number">443</span> <span class="token keyword">ssl</span> http2<span class="token punctuation">;</span>\n\n\t\t<span class="token keyword">location</span> <span class="token operator">/</span> <span class="token punctuation">&#123;</span>\n\t\t\t<span class="token keyword">proxy_pass</span>         <span class="token keyword">http</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>docker<span class="token operator">-</span>webrtc<span class="token operator">-</span><span class="token keyword">server</span><span class="token punctuation">;</span>\n\t\t\t<span class="token keyword">proxy_set_header</span>   Host <span class="token variable">$host</span><span class="token punctuation">;</span>\n\t\t\t<span class="token keyword">proxy_set_header</span>   X<span class="token operator">-</span>Real<span class="token operator">-</span>IP <span class="token variable">$remote_addr</span><span class="token punctuation">;</span>\n\t\t\t<span class="token keyword">proxy_set_header</span>   X<span class="token operator">-</span>Forwarded<span class="token operator">-</span>For <span class="token variable">$proxy_add_x_forwarded_for</span><span class="token punctuation">;</span>\n\t\t\t<span class="token keyword">proxy_set_header</span>   X<span class="token operator">-</span>Forwarded<span class="token operator">-</span>Host <span class="token variable">$server_name</span><span class="token punctuation">;</span>\n\n\t\t\t<span class="token comment"># WebSocket support</span>\n\t\t\t<span class="token keyword">proxy_http_version</span> <span class="token number">1.1</span><span class="token punctuation">;</span>\n\t\t\t<span class="token keyword">proxy_set_header</span>   Upgrade <span class="token variable">$http_upgrade</span><span class="token punctuation">;</span>\n\t\t\t<span class="token keyword">proxy_set_header</span>   Connection <span class="token variable">$connection_upgrade</span><span class="token punctuation">;</span>\n\t\t<span class="token punctuation">&#125;</span>\n\t<span class="token punctuation">&#125;</span>\n\n\t<span class="token comment">########</span>\n\t<span class="token comment"># BLOG #</span>\n\t<span class="token comment">########</span>\n\n\t<span class="token keyword">server</span> <span class="token punctuation">&#123;</span>\n\t\t<span class="token keyword">server_name</span> www<span class="token punctuation">.</span>blog<span class="token punctuation">.</span>shiryel<span class="token punctuation">.</span>com<span class="token punctuation">;</span>\n\t\t<span class="token keyword">listen</span> <span class="token number">443</span> <span class="token keyword">ssl</span> http2<span class="token punctuation">;</span>\n\t\t<span class="token keyword">listen</span> <span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token number">443</span> <span class="token keyword">ssl</span> http2<span class="token punctuation">;</span>\n\n\t\t<span class="token keyword">return</span> <span class="token number">301</span> <span class="token variable">$scheme</span><span class="token punctuation">:</span><span class="token operator">/</span><span class="token operator">/</span>blog<span class="token punctuation">.</span>shiryel<span class="token punctuation">.</span>com<span class="token operator">/</span><span class="token variable">$request_uri</span><span class="token punctuation">;</span>\n\t<span class="token punctuation">&#125;</span>\n\n\t<span class="token keyword">server</span> <span class="token punctuation">&#123;</span>\n\t\t<span class="token keyword">server_name</span> blog<span class="token punctuation">.</span>shiryel<span class="token punctuation">.</span>com<span class="token punctuation">;</span>\n\t\t<span class="token keyword">listen</span> <span class="token number">443</span> <span class="token keyword">ssl</span> http2<span class="token punctuation">;</span>\n\t\t<span class="token keyword">listen</span> <span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token number">443</span> <span class="token keyword">ssl</span> http2<span class="token punctuation">;</span>\n\n\t\t<span class="token keyword">location</span> <span class="token operator">/</span> <span class="token punctuation">&#123;</span>\n\t\t\t<span class="token keyword">root</span> <span class="token operator">/</span>www<span class="token operator">/</span>shiryel_blog<span class="token punctuation">;</span>\n\t\t<span class="token punctuation">&#125;</span>\n\t<span class="token punctuation">&#125;</span>\n<span class="token punctuation">&#125;</span></code>',w(n,q,t),w(n,A,t),d(A,C)},p:y,i:y,o:y,d(n){l(s),l(a),n&&l(m),n&&l(h),n&&l(_),n&&l(g),n&&l(f),n&&l(x),n&&l(E),n&&l(T),n&&l(H),n&&l(F),n&&l(R),n&&l(W),n&&l(q),n&&l(A)}}}export default class extends n{constructor(n){super(),s(this,n,null,m,a,{})}}
